{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  isLoggedIn() {\n    return this.getToken() != null;\n  }\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n  }\n  login(username, password) {\n    const url = 'http://127.0.0.1:8000/api/login';\n    const body = {\n      username: username,\n      password: password\n    };\n    this.http.post(url, body).subscribe(response => {\n      // Login successful, save token to localStorage\n      localStorage.setItem('token', response.token);\n      // Redirect to the home page\n      this.router.navigate(['admin']);\n    }, error => {\n      // Login failed, handle error\n      console.error(error);\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,MAAa,EAASC,IAAgB;IAAtC,WAAM,GAAND,MAAM;IAAgB,SAAI,GAAJC,IAAI;EAAiB;EAC/DC,QAAQ;IACN,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACtC;EACAC,UAAU;IACR,OAAO,IAAI,CAACH,QAAQ,EAAE,IAAI,IAAI;EAChC;EACAI,MAAM;IACJH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EACAC,KAAK,CAACC,QAAe,EAAEC,QAAe;IACpC,MAAMC,GAAG,GAAG,iCAAiC;IAC7C,MAAMC,IAAI,GAAG;MAAEH,QAAQ,EAAEA,QAAQ;MAAEC,QAAQ,EAAEA;IAAQ,CAAE;IACvD,IAAI,CAACV,IAAI,CAACa,IAAI,CAACF,GAAG,EAAEC,IAAI,CAAC,CAACE,SAAS,CAChCC,QAAY,IAAI;MACf;MACAb,YAAY,CAACc,OAAO,CAAC,OAAO,EAAED,QAAQ,CAACE,KAAK,CAAC;MAE7C;MACA,IAAI,CAAClB,MAAM,CAACQ,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,EACAW,KAAS,IAAI;MACZ;MACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;;AA7BWrB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAuB,SAAXvB,WAAW;EAAAwB,YAFV;AAAM","names":["AuthService","constructor","router","http","getToken","localStorage","getItem","isLoggedIn","logout","removeItem","navigate","login","username","password","url","body","post","subscribe","response","setItem","token","error","console","factory","providedIn"],"sourceRoot":"","sources":["C:\\New folder\\registration\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private router:Router,private http: HttpClient,) { }\n  getToken(): string|null{\n    return localStorage.getItem('token');\n  }\n  isLoggedIn(){\n    return this.getToken() != null\n  }\n  logout(){\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n  }\n  login(username:string, password:string){\n    const url = 'http://127.0.0.1:8000/api/login';\n    const body = { username: username, password: password };\n    this.http.post(url, body).subscribe(\n      (response:any) => {\n        // Login successful, save token to localStorage\n        localStorage.setItem('token', response.token);\n\n        // Redirect to the home page\n        this.router.navigate(['admin']);\n      },\n      (error:any) => {\n        // Login failed, handle error\n        console.error(error);\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}