{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet RegistrationComponent = class RegistrationComponent {\n  constructor(api) {\n    this.api = api;\n  }\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      \"firstName\": new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z]*')]),\n      \"lastName\": new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z]*')]),\n      \"emailId\": new FormControl(null, [Validators.required, Validators.email]),\n      \"passWord\": new FormControl(null, [Validators.required, Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$')]),\n      \"confirmPassword\": new FormControl(null, [Validators.required])\n    });\n  }\n  submitData() {\n    if (this.confirmpassword.value != this.password.value) {\n      alert(\"password does not match\");\n      return;\n    }\n    console.log(this.registerForm.value);\n    if (this.registerForm.valid) {\n      alert(`Thank You ${this.registerForm.value.firstName}`);\n    }\n  }\n  get firstname() {\n    return this.registerForm.get('firstName');\n  }\n  get lastname() {\n    return this.registerForm.get('lastName');\n  }\n  get emailid() {\n    return this.registerForm.get('emailId');\n  }\n  get password() {\n    return this.registerForm.get('passWord');\n  }\n  get confirmpassword() {\n    return this.registerForm.get('confirmPassword');\n  }\n};\nRegistrationComponent = __decorate([Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})], RegistrationComponent);\nexport { RegistrationComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAe,eAAe;AAChD,SAAOC,SAAS,EAACC,WAAW,EAACC,UAAU,QAAK,gBAAgB;AAOrD,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAChCC,YAAoBC,GAAuB;IAAvB,QAAG,GAAHA,GAAG;EAAsB;EAE7CC,QAAQ;IACR,IAAI,CAACC,YAAY,GAAC,IAAIP,SAAS,CAAC;MAC9B,WAAW,EAAC,IAAIC,WAAW,CAAC,IAAI,EAAC,CAACC,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACO,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;MACvF,UAAU,EAAC,IAAIR,WAAW,CAAC,IAAI,EAAC,CAACC,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACO,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;MACtF,SAAS,EAAC,IAAIR,WAAW,CAAC,IAAI,EAAC,CAACC,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACQ,KAAK,CAAC,CAAC;MACtE,UAAU,EAAC,IAAIT,WAAW,CAAC,IAAI,EAAC,CAACC,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACO,OAAO,CAAC,4EAA4E,CAAC,CAAC,CAAC;MACvJ,iBAAiB,EAAC,IAAIR,WAAW,CAAC,IAAI,EAAC,CAACC,UAAU,CAACM,QAAQ,CAAC;KAC7D,CAAC;EACF;EACAG,UAAU;IAER,IAAG,IAAI,CAACC,eAAe,CAACC,KAAK,IAAE,IAAI,CAACC,QAAQ,CAACD,KAAK,EAAC;MACjDE,KAAK,CAAC,yBAAyB,CAAC;MAChC;;IAEFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,YAAY,CAACM,KAAK,CAAC;IACpC,IAAG,IAAI,CAACN,YAAY,CAACW,KAAK,EAAC;MACzBH,KAAK,CAAC,aAAa,IAAI,CAACR,YAAY,CAACM,KAAK,CAACM,SAAS,EAAE,CAAC;;EAE3D;EACA,IAAIC,SAAS;IACX,OAAO,IAAI,CAACb,YAAY,CAACc,GAAG,CAAC,WAAW,CAAC;EAC3C;EACA,IAAIC,QAAQ;IACV,OAAO,IAAI,CAACf,YAAY,CAACc,GAAG,CAAC,UAAU,CAAC;EAC1C;EACA,IAAIE,OAAO;IACT,OAAO,IAAI,CAAChB,YAAY,CAACc,GAAG,CAAC,SAAS,CAAC;EACzC;EACA,IAAIP,QAAQ;IACV,OAAO,IAAI,CAACP,YAAY,CAACc,GAAG,CAAC,UAAU,CAAC;EAC1C;EACA,IAAIT,eAAe;IACjB,OAAO,IAAI,CAACL,YAAY,CAACc,GAAG,CAAC,iBAAiB,CAAC;EACjD;CACD;AAtCYlB,qBAAqB,eALjCJ,SAAS,CAAC;EACTyB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWvB,qBAAqB,CAsCjC;SAtCYA,qBAAqB","names":["Component","FormGroup","FormControl","Validators","RegistrationComponent","constructor","api","ngOnInit","registerForm","required","pattern","email","submitData","confirmpassword","value","password","alert","console","log","valid","firstName","firstname","get","lastname","emailid","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\New folder\\registration\\src\\app\\registration\\registration.component.ts"],"sourcesContent":["import { ReturnStatement } from '@angular/compiler';\nimport { Component,OnInit } from '@angular/core';\nimport{FormGroup,FormControl,Validators}from'@angular/forms';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent {\n  constructor(private api:RegistrationService){}\n  registerForm:any;\n  ngOnInit():void{\n  this.registerForm=new FormGroup({\n    \"firstName\":new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z]*')]),\n    \"lastName\":new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z]*')]),\n    \"emailId\":new FormControl(null,[Validators.required,Validators.email]),\n    \"passWord\":new FormControl(null,[Validators.required,Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$')]),\n    \"confirmPassword\":new FormControl(null,[Validators.required]),\n  });\n  }\n  submitData()\n  {\n    if(this.confirmpassword.value!=this.password.value){\n      alert(\"password does not match\");\n      return;\n    }\n    console.log(this.registerForm.value);\n    if(this.registerForm.valid){\n      alert(`Thank You ${this.registerForm.value.firstName}`);\n    }\n  }\n  get firstname(){\n    return this.registerForm.get('firstName');\n  }\n  get lastname(){\n    return this.registerForm.get('lastName');\n  }\n  get emailid(){\n    return this.registerForm.get('emailId');\n  }\n  get password(){\n    return this.registerForm.get('passWord');\n  }\n  get confirmpassword(){\n    return this.registerForm.get('confirmPassword');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}