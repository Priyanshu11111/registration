{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { customers } from './register.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../app/registration.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegistrationComponent_div_7_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"First name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_7_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Enter Only Characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_7_span_1_Template, 2, 0, \"span\", 14);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_7_span_2_Template, 2, 0, \"span\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.firstname.errors == null ? null : ctx_r0.firstname.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.firstname.errors == null ? null : ctx_r0.firstname.errors.pattern);\n  }\n}\nfunction RegistrationComponent_div_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Lastname is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_10_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Enter Only Characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_10_span_1_Template, 2, 0, \"span\", 14);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_10_span_2_Template, 2, 0, \"span\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.lastname.errors == null ? null : ctx_r1.lastname.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.lastname.errors == null ? null : ctx_r1.lastname.errors.pattern);\n  }\n}\nfunction RegistrationComponent_div_13_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Emailid is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_13_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Enter Valid Email Address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_13_span_1_Template, 2, 0, \"span\", 14);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_13_span_2_Template, 2, 0, \"span\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.emailid.errors == null ? null : ctx_r2.emailid.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.emailid.errors == null ? null : ctx_r2.emailid.errors.email);\n  }\n}\nfunction RegistrationComponent_div_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_16_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Password must contain more than 8 characters, 1 numeric, 1 upper case letter, and 1 special character($@$!%*?&).\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_16_span_1_Template, 2, 0, \"span\", 14);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_16_span_2_Template, 2, 0, \"span\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.password.errors == null ? null : ctx_r3.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.password.errors == null ? null : ctx_r3.password.errors.pattern);\n  }\n}\nfunction RegistrationComponent_div_19_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_19_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"The entered Password not match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_19_span_1_Template, 2, 0, \"span\", 14);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_19_span_2_Template, 2, 0, \"span\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.confirmpassword.errors == null ? null : ctx_r4.confirmpassword.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.confirmpassword.valid);\n  }\n}\nexport class RegistrationComponent {\n  constructor(api) {\n    this.api = api;\n    this.register = new customers();\n  }\n  ngOnInit() {\n    this.api.apiCall().subscribe(data => {\n      console.log(\"get api data\", data);\n    });\n    this.registerForm = new FormGroup({\n      \"firstName\": new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z]*')]),\n      \"lastName\": new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z]*')]),\n      \"emailId\": new FormControl(null, [Validators.required, Validators.email]),\n      \"passWord\": new FormControl(null, [Validators.required, Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$')]),\n      \"confirmPassword\": new FormControl(null, [Validators.required])\n    });\n  }\n  submitData() {\n    this.api.submitData(this.registerForm).subscribe(res => {\n      console.log(res);\n    });\n    if (this.confirmpassword.value != this.password.value) {\n      alert(\"password does not match\");\n      return;\n    }\n    console.log(this.registerForm.value);\n    if (this.registerForm.valid) {\n      alert(`Thank You ${this.registerForm.value.firstName}`);\n    }\n  }\n  get firstname() {\n    return this.registerForm.get('firstName');\n  }\n  get lastname() {\n    return this.registerForm.get('lastName');\n  }\n  get emailid() {\n    return this.registerForm.get('emailId');\n  }\n  get password() {\n    return this.registerForm.get('passWord');\n  }\n  get confirmpassword() {\n    return this.registerForm.get('confirmPassword');\n  }\n}\nRegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.RegistrationService));\n};\nRegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationComponent,\n  selectors: [[\"app-registration\"]],\n  decls: 24,\n  vars: 7,\n  consts: [[1, \"continer\", \"mt-5\"], [1, \"content\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\"], [1, \"row\"], [1, \"mt-2\", \"mb-2\", \"col-lg-6\", \"col-6\"], [\"type\", \"text\", \"formControlName\", \"firstName\", \"placeholder\", \"First name\", 1, \"form-control\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"lastName\", \"placeholder\", \"Last name\", 1, \"form-control\"], [1, \"mt-2\", \"mb-2\", \"col-lg-12\", \"col-12\"], [\"type\", \"text\", \"formControlName\", \"emailId\", \"placeholder\", \"Email-id\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"passWord\", \"cd\", \"\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"cd\", \"\", \"placeholder\", \"Confirm Password\", 1, \"form-control\"], [1, \"mt-3\", \"col-lg-12\", \"col-12\"], [1, \"btn\", 3, \"disabled\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submitData();\n      });\n      i0.ɵɵelementStart(2, \"h3\", 2);\n      i0.ɵɵtext(3, \"Registration Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4);\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵtemplate(7, RegistrationComponent_div_7_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4);\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵtemplate(10, RegistrationComponent_div_10_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 8);\n      i0.ɵɵelement(12, \"input\", 9);\n      i0.ɵɵtemplate(13, RegistrationComponent_div_13_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵtemplate(16, RegistrationComponent_div_16_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 8);\n      i0.ɵɵelement(18, \"input\", 11);\n      i0.ɵɵtemplate(19, RegistrationComponent_div_19_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 2)(21, \"div\", 12)(22, \"button\", 13);\n      i0.ɵɵtext(23, \"Submit\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.firstname.invalid && (ctx.firstname.touched || ctx.firstname.dirty));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.lastname.invalid && (ctx.lastname.touched || ctx.lastname.dirty));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.emailid.invalid && (ctx.emailid.touched || ctx.emailid.dirty));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && (ctx.password.touched || ctx.password.dirty));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.confirmpassword.invalid && (ctx.confirmpassword.touched || ctx.confirmpassword.dirty));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".content[_ngcontent-%COMP%]{\\r\\n    max-width: 500px;\\r\\n    margin: auto;\\r\\n    background-color: #fff;\\r\\n    padding: 2% 2%; \\r\\n} \\r\\nbutton[_ngcontent-%COMP%]\\r\\n{\\r\\nbackground-color: aqua;\\r\\ncolor: black;\\r\\ntext-align: center;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]:hover\\r\\n{\\r\\n    background-color: aqua;\\r\\n    color: red;\\r\\n}\\r\\n.error[_ngcontent-%COMP%]\\r\\n{\\r\\n    color: red;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsY0FBYztBQUNsQjtBQUNBOztBQUVBLHNCQUFzQjtBQUN0QixZQUFZO0FBQ1osa0JBQWtCO0FBQ2xCO0FBQ0E7O0lBRUksc0JBQXNCO0lBQ3RCLFVBQVU7QUFDZDtBQUNBOztJQUVJLFVBQVU7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50e1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBwYWRkaW5nOiAyJSAyJTsgXHJcbn0gXHJcbmJ1dHRvblxyXG57XHJcbmJhY2tncm91bmQtY29sb3I6IGFxdWE7XHJcbmNvbG9yOiBibGFjaztcclxudGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbmJ1dHRvbjpob3ZlclxyXG57XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBhcXVhO1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4uZXJyb3Jcclxue1xyXG4gICAgY29sb3I6IHJlZDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","customers","i0","RegistrationComponent","constructor","api","ngOnInit","apiCall","subscribe","data","console","log","registerForm","required","pattern","email","submitData","res","confirmpassword","value","password","alert","valid","firstName","firstname","get","lastname","emailid","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\New folder\\registration\\src\\app\\registration\\registration.component.ts","C:\\New folder\\registration\\src\\app\\registration\\registration.component.html"],"sourcesContent":["import { ReturnStatement } from '@angular/compiler';\nimport { Component,OnInit } from '@angular/core';\nimport{FormGroup,FormControl,Validators}from'@angular/forms';\nimport{RegistrationService}from'../../app/registration.service';\nimport { customers } from './register.model';\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent {\n  constructor(private api:RegistrationService){}\n  registerForm:any;\n  register=new customers();\n  ngOnInit():void{\n    this.api.apiCall().subscribe((data)=>{\n      console.log(\"get api data\",data);\n    })\n  this.registerForm=new FormGroup({\n    \"firstName\":new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z]*')]),\n    \"lastName\":new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z]*')]),\n    \"emailId\":new FormControl(null,[Validators.required,Validators.email]),\n    \"passWord\":new FormControl(null,[Validators.required,Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$')]),\n    \"confirmPassword\":new FormControl(null,[Validators.required]),\n  });\n  }\n  submitData()\n  {\n    this.api.submitData(this.registerForm).subscribe(res=>{\n      console.log(res);\n    })\n    if(this.confirmpassword.value!=this.password.value){\n      alert(\"password does not match\");\n      return;\n    }\n    console.log(this.registerForm.value);\n    if(this.registerForm.valid){\n      alert(`Thank You ${this.registerForm.value.firstName}`);\n    }\n  }\n  get firstname(){\n    return this.registerForm.get('firstName');\n  }\n  get lastname(){\n    return this.registerForm.get('lastName');\n  }\n  get emailid(){\n    return this.registerForm.get('emailId');\n  }\n  get password(){\n    return this.registerForm.get('passWord');\n  }\n  get confirmpassword(){\n    return this.registerForm.get('confirmPassword');\n  }\n}\n","<div class=\"continer mt-5\">\n\n    <form [formGroup]=\"registerForm\" class=\"content\" (ngSubmit)=\"submitData()\">\n        <h3 class=\"text-center\">Registration Form</h3>\n        <div class=\"row\">\n    <div class=\"mt-2 mb-2 col-lg-6 col-6\">\n        <input type=\"text\" formControlName=\"firstName\"class=\"form-control\" placeholder=\"First name\">\n    <div *ngIf=\"firstname.invalid && (firstname.touched||firstname.dirty)\">\n        <span class=\"error\" *ngIf=\"firstname.errors?.required\">First name is required</span>\n        <span class=\"error\" *ngIf=\"firstname.errors?.pattern\">Enter Only Characters</span>\n    </div>\n    </div>\n    <div class=\"mt-2 mb-2 col-lg-6 col-6\">\n        <input type=\"text\" formControlName=\"lastName\"class=\"form-control\" placeholder=\"Last name\">\n        <div *ngIf=\"lastname.invalid && (lastname.touched||lastname.dirty)\">\n        <span class=\"error\" *ngIf=\"lastname.errors?.required\">Lastname is required</span>\n        <span class=\"error\" *ngIf=\"lastname.errors?.pattern\">Enter Only Characters</span>\n    </div>\n    </div>\n    <div class=\"mt-2 mb-2 col-lg-12 col-12\">\n        <input type=\"text\" formControlName=\"emailId\" class=\"form-control\" placeholder=\"Email-id\">\n        <div *ngIf=\"emailid.invalid && (emailid.touched||emailid.dirty)\">\n            <span class=\"error\" *ngIf=\"emailid.errors?.required\">Emailid is required</span>\n            <span class=\"error\" *ngIf=\"emailid.errors?.email\">Enter Valid Email Address</span>\n        </div>\n    </div>\n    <div class=\"mt-2 mb-2 col-lg-12 col-12\">\n        <input type=\"password\" formControlName=\"passWord\" cd class=\"form-control\" placeholder=\"Password\">\n        <div *ngIf=\"password.invalid && (password.touched||password.dirty)\">\n            <span class=\"error\" *ngIf=\"password.errors?.required\">Password is required</span>\n            <span class=\"error\" *ngIf=\"password.errors?.pattern\">Password must contain more than 8 characters, 1 numeric, 1 upper case letter, and 1 special character($@$!%*?&).</span>\n        </div>\n    </div>\n    <div class=\"mt-2 mb-2 col-lg-12 col-12\"> \n        <input type=\"password\" formControlName=\"confirmPassword\" cd class=\"form-control\" placeholder=\"Confirm Password\">\n        <div *ngIf=\"confirmpassword.invalid && (confirmpassword.touched||confirmpassword.dirty)\">\n            <span class=\"error\" *ngIf=\"confirmpassword.errors?.required\">Confirm Password is required</span>\n            <span class=\"error\" *ngIf=\"confirmpassword.valid\">The entered Password not match</span>\n        </div>\n    </div>\n    <div class=\"text-center\">\n    <div class=\"mt-3 col-lg-12 col-12\">\n        <button class=\"btn\" [disabled]=\"registerForm.invalid\">Submit</button>\n    </div>\n    </div>\n    </div>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}