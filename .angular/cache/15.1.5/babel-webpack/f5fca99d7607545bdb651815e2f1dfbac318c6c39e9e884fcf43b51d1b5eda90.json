{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../registration.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction UserComponent_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function UserComponent_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.switchRole());\n    });\n    i0.ɵɵtext(1, \"Switch to Admin Mode\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UserComponent {\n  constructor(api, router) {\n    this.api = api;\n    this.router = router;\n    this.currentRole = '';\n  }\n  logout() {\n    this.api.logout();\n  }\n  switchRole() {\n    this.api.setUserRole(this.currentRole === 'admin' ? 'user' : 'admin');\n    this.currentRole = this.api.getUserRole();\n    this.router.navigate([this.currentRole === 'admin' ? 'admin' : 'users']);\n  }\n}\nUserComponent.ɵfac = function UserComponent_Factory(t) {\n  return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.RegistrationService), i0.ɵɵdirectiveInject(i2.Router));\n};\nUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserComponent,\n  selectors: [[\"app-user\"]],\n  decls: 16,\n  vars: 1,\n  consts: [[1, \"navbar\", \"navbar-expand\", \"navbar-dark\", \"bg-dark\", \"px-2\"], [\"href\", \"#\", 1, \"navbar-brand\", \"px-4\"], [1, \"navbar-collapse\"], [1, \"navbar-nav\", \"me-auto\"], [1, \"nav\", \"item\", \"dropdown\"], [\"role\", \"button\", \"data-bs-toggle\", \"dropdown\", 1, \"nav-link\", \"dropdown-toggle\"], [1, \"dropdown-menu\", \"dropdown-menu-dark\"], [\"routerLinkActive\", \"active\", \"routerLink\", \"../showemployee\", 1, \"dropdown-item\"], [3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [3, \"click\"]],\n  template: function UserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"a\", 1);\n      i0.ɵɵtext(2, \"Management System\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"ul\", 3)(5, \"li\", 4)(6, \"a\", 5);\n      i0.ɵɵtext(7, \" Employee \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ul\", 6)(9, \"li\")(10, \"a\", 7);\n      i0.ɵɵtext(11, \"Show Employee\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵtemplate(12, UserComponent_button_12_Template, 2, 0, \"button\", 8);\n      i0.ɵɵelementStart(13, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function UserComponent_Template_button_click_13_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵtext(14, \"Logout\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(15, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentRole === \"user\");\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterOutlet, i2.RouterLink, i2.RouterLinkActive],\n  styles: [\"*[_ngcontent-%COMP%]{    \\r\\n    font-family: 'Shantell Sans', cursive;\\r\\n   }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQ0FBcUM7R0FDdEMiLCJzb3VyY2VzQ29udGVudCI6WyIqeyAgICBcclxuICAgIGZvbnQtZmFtaWx5OiAnU2hhbnRlbGwgU2FucycsIGN1cnNpdmU7XHJcbiAgIH1cclxuICAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAcIA,kCAA8D;IAAvBA;MAAAA;MAAA;MAAA,OAASA,kCAAY;IAAA,EAAC;IAACA,oCAAoB;IAAAA,iBAAS;;;ACL/F,OAAM,MAAOC,aAAa;EACxBC,YAAoBC,GAAuB,EAASC,MAAa;IAA7C,QAAG,GAAHD,GAAG;IAA6B,WAAM,GAANC,MAAM;IAE5D,gBAAW,GAAW,EAAE;EAF6C;EAGnEC,MAAM;IACJ,IAAI,CAACF,GAAG,CAACE,MAAM,EAAE;EACrB;EACAC,UAAU;IACR,IAAI,CAACH,GAAG,CAACI,WAAW,CAAC,IAAI,CAACC,WAAW,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;IACrE,IAAI,CAACA,WAAW,GAAG,IAAI,CAACL,GAAG,CAACM,WAAW,EAAE;IACzC,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,IAAI,CAACF,WAAW,KAAK,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC,CAAC;EAC1E;;AAXaP,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT1Bf,8BAA2D;MACjBA,iCAAiB;MAAAA,iBAAI;MAC3DA,8BAA6B;MAIvBA,0BACA;MAAAA,iBAAI;MACJA,6BAA6C;MACwCA,8BAAa;MAAAA,iBAAI;MAK5GA,sEAA2F;MAC3FA,kCAAgE;MAAnBA;QAAA,OAASgB,YAAQ;MAAA,EAAC;MAAChB,uBAAM;MAAAA,iBAAS;MAEnFA,iCAA+B;;;MAHlBA,gBAA4B;MAA5BA,iDAA4B","names":["i0","UserComponent","constructor","api","router","logout","switchRole","setUserRole","currentRole","getUserRole","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\New folder\\registration\\src\\app\\user\\user.component.html","C:\\New folder\\registration\\src\\app\\user\\user.component.ts"],"sourcesContent":["<nav class=\"navbar navbar-expand navbar-dark bg-dark px-2\">\n    <a class=\"navbar-brand px-4\" href=\"#\">Management System</a>\n    <div class=\"navbar-collapse\">\n      <ul class=\"navbar-nav me-auto\">\n        <li class=\"nav item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" role=\"button\" data-bs-toggle=\"dropdown\">\n          Employee\n          </a> \n          <ul class=\"dropdown-menu dropdown-menu-dark\">\n            <li><a class=\"dropdown-item\" routerLinkActive=\"active\"routerLink=\"../showemployee\">Show Employee</a></li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n    <button *ngIf=\"currentRole === 'user'\" (click)=\"switchRole()\">Switch to Admin Mode</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"logout()\">Logout</button><!--  -->\n</nav>\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RegistrationService } from '../registration.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent {\n  constructor(private api:RegistrationService,private router:Router){}\n  currentUser: any;\ncurrentRole: string = '';\n  logout():void {\n    this.api.logout();\n}\nswitchRole() {\n  this.api.setUserRole(this.currentRole === 'admin' ? 'user' : 'admin');\n  this.currentRole = this.api.getUserRole();\n  this.router.navigate([this.currentRole === 'admin' ? 'admin' : 'users']);\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}