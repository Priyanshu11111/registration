{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../registration.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(api, router, route, state) {\n    this.api = api;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (!this.api.IsloggedIn()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    const role = localStorage.getItem('role');\n    if (role === 'admin') {\n      // Allow access to the admin route\n      return true;\n    } else {\n      // Redirect to the user route\n      this.router.navigate(['/user']);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.RegistrationService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i2.ActivatedRouteSnapshot), i0.ɵɵinject(i2.RouterStateSnapshot));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,GAAuB,EAASC,MAAa,EAACC,KAA6B,EAAEC,KAA0B;IAAvG,QAAG,GAAHH,GAAG;IAA6B,WAAM,GAANC,MAAM;EAAmE;EAC7HG,WAAW,CACTF,KAA6B,EAC7BC,KAA0B;IACxB,IAAG,CAAC,IAAI,CAACH,GAAG,CAACK,UAAU,EAAE,EAAC;MACxB,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;IAEd,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAEzC,IAAIF,IAAI,KAAK,OAAO,EAAE;MACpB;MACA,OAAO,IAAI;KACZ,MAAM;MACL;MACA,IAAI,CAACN,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;;AAnBSR,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAY,SAATZ,SAAS;EAAAa,YAFR;AAAM","names":["AuthGuard","constructor","api","router","route","state","canActivate","IsloggedIn","navigate","role","localStorage","getItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\New folder\\registration\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { RegistrationService } from '../registration.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private api:RegistrationService,private router:Router,route: ActivatedRouteSnapshot, state: RouterStateSnapshot){}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean{\n      if(!this.api.IsloggedIn()){\n        this.router.navigate(['login']);\n        return false;\n      }\n      const role = localStorage.getItem('role');\n\n      if (role === 'admin') {\n        // Allow access to the admin route\n        return true;\n      } else {\n        // Redirect to the user route\n        this.router.navigate(['/user']);\n        return false;\n      }\n    }\n  }\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}