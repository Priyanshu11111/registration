{"ast":null,"code":"import { hashSync } from 'bcryptjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../app/registration.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ShowcustomerComponent_form_1_div_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"First name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShowcustomerComponent_form_1_div_6_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Enter Only Characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShowcustomerComponent_form_1_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ShowcustomerComponent_form_1_div_6_span_1_Template, 2, 0, \"span\", 17);\n    i0.ɵɵtemplate(2, ShowcustomerComponent_form_1_div_6_span_2_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.firstName.errors == null ? null : ctx_r2.firstName.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.firstName.errors == null ? null : ctx_r2.firstName.errors.pattern);\n  }\n}\nfunction ShowcustomerComponent_form_1_div_9_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Lastname is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShowcustomerComponent_form_1_div_9_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Enter Only Characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShowcustomerComponent_form_1_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ShowcustomerComponent_form_1_div_9_span_1_Template, 2, 0, \"span\", 17);\n    i0.ɵɵtemplate(2, ShowcustomerComponent_form_1_div_9_span_2_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.lastName.errors == null ? null : ctx_r3.lastName.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.lastName.errors == null ? null : ctx_r3.lastName.errors.pattern);\n  }\n}\nfunction ShowcustomerComponent_form_1_div_12_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Emailid is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShowcustomerComponent_form_1_div_12_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Enter Valid Email Address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShowcustomerComponent_form_1_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ShowcustomerComponent_form_1_div_12_span_1_Template, 2, 0, \"span\", 17);\n    i0.ɵɵtemplate(2, ShowcustomerComponent_form_1_div_12_span_2_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.emailid.errors == null ? null : ctx_r4.emailid.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.emailid.errors == null ? null : ctx_r4.emailid.errors.pattern);\n  }\n}\nfunction ShowcustomerComponent_form_1_div_15_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShowcustomerComponent_form_1_div_15_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Password must contain more than 8 characters, 1 numeric, 1 upper case letter, and 1 special character($@$!%*?&).\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShowcustomerComponent_form_1_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ShowcustomerComponent_form_1_div_15_span_1_Template, 2, 0, \"span\", 17);\n    i0.ɵɵtemplate(2, ShowcustomerComponent_form_1_div_15_span_2_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.passWord.errors == null ? null : ctx_r5.passWord.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.passWord.errors == null ? null : ctx_r5.passWord.errors.pattern);\n  }\n}\nfunction ShowcustomerComponent_form_1_div_18_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShowcustomerComponent_form_1_div_18_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"The entered Password not match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShowcustomerComponent_form_1_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ShowcustomerComponent_form_1_div_18_span_1_Template, 2, 0, \"span\", 17);\n    i0.ɵɵtemplate(2, ShowcustomerComponent_form_1_div_18_span_2_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.confirmpassword.errors == null ? null : ctx_r6.confirmpassword.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.confirmpassword.valid);\n  }\n}\nfunction ShowcustomerComponent_form_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function ShowcustomerComponent_form_1_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.submitData());\n    });\n    i0.ɵɵelementStart(1, \"h3\", 6);\n    i0.ɵɵtext(2, \"Registration Form\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 7)(4, \"div\", 8);\n    i0.ɵɵelement(5, \"input\", 9);\n    i0.ɵɵtemplate(6, ShowcustomerComponent_form_1_div_6_Template, 3, 2, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 8);\n    i0.ɵɵelement(8, \"input\", 11);\n    i0.ɵɵtemplate(9, ShowcustomerComponent_form_1_div_9_Template, 3, 2, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 8);\n    i0.ɵɵelement(11, \"input\", 12);\n    i0.ɵɵtemplate(12, ShowcustomerComponent_form_1_div_12_Template, 3, 2, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 8);\n    i0.ɵɵelement(14, \"input\", 13);\n    i0.ɵɵtemplate(15, ShowcustomerComponent_form_1_div_15_Template, 3, 2, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 8);\n    i0.ɵɵelement(17, \"input\", 14);\n    i0.ɵɵtemplate(18, ShowcustomerComponent_form_1_div_18_Template, 3, 2, \"div\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 6)(20, \"div\", 15)(21, \"button\", 16);\n    i0.ɵɵtext(22, \"Submit\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.registerForm);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.firstName.invalid && (ctx_r0.firstName.touched || ctx_r0.firstName.dirty));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.lastName.invalid && (ctx_r0.lastName.touched || ctx_r0.lastName.dirty));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.emailid.invalid && (ctx_r0.emailid.touched || ctx_r0.emailid.dirty));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passWord.invalid && (ctx_r0.passWord.touched || ctx_r0.passWord.dirty));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.confirmpassword.invalid && (ctx_r0.confirmpassword.touched || ctx_r0.confirmpassword.dirty));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.registerForm.invalid);\n  }\n}\nfunction ShowcustomerComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ShowcustomerComponent_tr_16_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const user_r19 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.deleteUser(user_r19.id));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ShowcustomerComponent_tr_16_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const user_r19 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.editUser(user_r19.id, user_r19));\n    });\n    i0.ɵɵtext(13, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r19 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r19.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r19.firstname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r19.lastname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r19.email);\n  }\n}\nexport class ShowcustomerComponent {\n  constructor(api, router) {\n    this.api = api;\n    this.router = router;\n    this.show = false;\n  }\n  ngOnInit() {\n    this.api.apiCall().subscribe(data => {\n      this.users = data;\n    });\n  }\n  submitData() {\n    const hashedPassword = hashSync(this.registerForm.value.password, 10);\n    const formData = {\n      ...this.registerForm.value,\n      password: hashedPassword,\n      password_confirmation: hashedPassword\n    };\n    const id = this.user_data ? this.user_data.customer.id : null;\n    if (id) {\n      // If the ID exists, update the record\n      this.api.editUser(id, formData).subscribe(data => {\n        console.log(data);\n      });\n      alert(`User with ID ${id} has been updated`);\n      this.user_data.customer.firstname = this.registerForm.value.firstname;\n      this.user_data.customer.lastname = this.registerForm.value.lastname;\n      this.user_data.customer.email = this.registerForm.value.email;\n    } else {\n      // If the ID does not exist, create a new record\n      this.api.submitData(formData).subscribe(data => {\n        console.log(data);\n      });\n      alert(`New user has been created`);\n    }\n    if (this.confirmpassword.value != this.passWord.value) {\n      alert(\"password does not match\");\n      return;\n    }\n    if (this.registerForm.valid) {\n      alert(`Thank You ${this.registerForm.value.firstname}`);\n    }\n  }\n  editUser(id, data) {\n    this.api.editUser(id, data).subscribe(data => {\n      this.user_data = data;\n      console.log(this.user_data.customer);\n      this.registerForm.patchValue({\n        firstname: this.user_data.customer.firstname,\n        lastname: this.user_data.customer.lastname,\n        email: this.user_data.customer.email\n      });\n    });\n    this.router.navigate(['/addcustomers', id]);\n  }\n  deleteUser(id) {\n    this.api.deleteUser(id).subscribe(data => {\n      console.log('User deleted successfully');\n    });\n  }\n  get firstName() {\n    return this.registerForm.get('firstname');\n  }\n  get lastName() {\n    return this.registerForm.get('lastname');\n  }\n  get emailid() {\n    return this.registerForm.get('email');\n  }\n  get passWord() {\n    return this.registerForm.get('password');\n  }\n  get confirmpassword() {\n    return this.registerForm.get('password_confirmation');\n  }\n}\nShowcustomerComponent.ɵfac = function ShowcustomerComponent_Factory(t) {\n  return new (t || ShowcustomerComponent)(i0.ɵɵdirectiveInject(i1.RegistrationService), i0.ɵɵdirectiveInject(i2.Router));\n};\nShowcustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowcustomerComponent,\n  selectors: [[\"app-showcustomer\"]],\n  decls: 17,\n  vars: 2,\n  consts: [[1, \"continer\"], [\"class\", \"content\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"table\", \"table-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"content\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\"], [1, \"row\"], [1, \"mt-2\"], [\"type\", \"text\", \"formControlName\", \"firstname\", \"placeholder\", \"First name\", 1, \"form-control\", 3, \"hidden\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"lastname\", \"placeholder\", \"Last name\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Email-id\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", \"cd\", \"\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password_confirmation\", \"cd\", \"\", \"placeholder\", \"Confirm Password\", 1, \"form-control\"], [1, \"mt-3\", \"col-lg-12\", \"col-12\"], [1, \"btn\", 3, \"disabled\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"], [\"scope\", \"row\"], [3, \"click\"]],\n  template: function ShowcustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ShowcustomerComponent_form_1_Template, 23, 7, \"form\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 2)(3, \"thead\")(4, \"tr\")(5, \"th\", 3);\n      i0.ɵɵtext(6, \"Customers_id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 3);\n      i0.ɵɵtext(8, \"Firstname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 3);\n      i0.ɵɵtext(10, \"Lastname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 3);\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 3);\n      i0.ɵɵtext(14, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"tbody\");\n      i0.ɵɵtemplate(16, ShowcustomerComponent_tr_16_Template, 14, 4, \"tr\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.show);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.users);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["hashSync","i0","ShowcustomerComponent","constructor","api","router","ngOnInit","apiCall","subscribe","data","users","submitData","hashedPassword","registerForm","value","password","formData","password_confirmation","id","user_data","customer","editUser","console","log","alert","firstname","lastname","email","confirmpassword","passWord","valid","patchValue","navigate","deleteUser","firstName","get","lastName","emailid","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\New folder\\registration\\src\\app\\showcustomer\\showcustomer.component.ts","C:\\New folder\\registration\\src\\app\\showcustomer\\showcustomer.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport{RegistrationService}from'../../app/registration.service';\nimport { ReturnStatement } from '@angular/compiler';\nimport{FormGroup,FormControl,Validators}from'@angular/forms';\nimport { hashSync,compareSync } from 'bcryptjs';\nimport { last } from 'rxjs';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-showcustomer',\n  templateUrl: './showcustomer.component.html',\n  styleUrls: ['./showcustomer.component.css']\n})\nexport class ShowcustomerComponent { \n  constructor(private api:RegistrationService\n  ,private router:Router){}\nregisterForm:any;\nusers:any;\ndata:any;\nshow=false;\nuser_data:any;\nngOnInit():void{\n  this.api.apiCall().subscribe((data)=>{\n    this.users = data;\n  })\n}\nsubmitData()\n{\n  const hashedPassword = hashSync(this.registerForm.value.password, 10);\n  const formData = {\n    ...this.registerForm.value,\n    password: hashedPassword,\n    password_confirmation: hashedPassword\n  } \n  const id = this.user_data ? this.user_data.customer.id : null;\n  if (id) {\n    // If the ID exists, update the record\n    this.api.editUser(id, formData).subscribe(data => {\n      console.log(data);\n    });\n    alert(`User with ID ${id} has been updated`);\n    this.user_data.customer.firstname = this.registerForm.value.firstname;\n    this.user_data.customer.lastname = this.registerForm.value.lastname;\n    this.user_data.customer.email = this.registerForm.value.email;\n  } else {\n    // If the ID does not exist, create a new record\n    this.api.submitData(formData).subscribe(data => {\n      console.log(data);\n    });\n    alert(`New user has been created`);\n  }\n  if(this.confirmpassword.value!=this.passWord.value){\n    alert(\"password does not match\");\n    return;\n  }\n  if(this.registerForm.valid){\n    alert(`Thank You ${this.registerForm.value.firstname}`);\n  }\n}\neditUser(id:number,data:any){\n  this.api.editUser(id,data).subscribe((data: any) => {\n    this.user_data = data;\n    console.log(this.user_data.customer);\n    this.registerForm.patchValue({\n      firstname:this.user_data.customer.firstname,\n      lastname:this.user_data.customer.lastname,\n      email:this.user_data.customer.email,\n    })\n  });\n  this.router.navigate(['/addcustomers',id])\n}\ndeleteUser(id: number) {\n  this.api.deleteUser(id).subscribe((data) => {\n    console.log('User deleted successfully');\n  });\n}\nget firstName(){  \n  return this.registerForm.get('firstname');\n}\nget lastName(){\n  return this.registerForm.get('lastname');\n}\nget emailid(){\n  return this.registerForm.get('email');\n}\nget passWord(){\n  return this.registerForm.get('password');\n}\nget confirmpassword(){\n  return this.registerForm.get('password_confirmation');\n}\n}\n","<div class=\"continer\">\n  <form [formGroup]=\"registerForm\" class=\"content\" (ngSubmit)=\"submitData()\" *ngIf=\"show\" >\n      <h3 class=\"text-center\">Registration Form</h3>\n      <div class=\"row\">\n  <div class=\"mt-2\">\n      <input type=\"text\" formControlName=\"firstname\"class=\"form-control\" placeholder=\"First name\"[hidden]=\"\">\n  <div *ngIf=\"firstName.invalid && (firstName.touched||firstName.dirty)\">\n      <span class=\"error\" *ngIf=\"firstName.errors?.required\">First name is required</span>\n      <span class=\"error\" *ngIf=\"firstName.errors?.pattern\">Enter Only Characters</span>\n  </div>\n  </div>\n  <div class=\"mt-2\">\n      <input type=\"text\" formControlName=\"lastname\"class=\"form-control\" placeholder=\"Last name\">\n      <div *ngIf=\"lastName.invalid && (lastName.touched||lastName.dirty)\">\n      <span class=\"error\" *ngIf=\"lastName.errors?.required\">Lastname is required</span>\n      <span class=\"error\" *ngIf=\"lastName.errors?.pattern\">Enter Only Characters</span>\n  </div>\n  </div>\n  <div class=\"mt-2\">\n      <input type=\"text\" formControlName=\"email\" class=\"form-control\" placeholder=\"Email-id\">\n      <div *ngIf=\"emailid.invalid && (emailid.touched||emailid.dirty)\">\n          <span class=\"error\" *ngIf=\"emailid.errors?.required\">Emailid is required</span>\n          <span class=\"error\" *ngIf=\"emailid.errors?.pattern\">Enter Valid Email Address</span>\n      </div>\n  </div>\n  <div class=\"mt-2\">\n      <input type=\"password\" formControlName=\"password\" cd class=\"form-control\" placeholder=\"Password\">\n      <div *ngIf=\"passWord.invalid && (passWord.touched||passWord.dirty)\">\n          <span class=\"error\" *ngIf=\"passWord.errors?.required\">Password is required</span>\n          <span class=\"error\" *ngIf=\"passWord.errors?.pattern\">Password must contain more than 8 characters, 1 numeric, 1 upper case letter, and 1 special character($@$!%*?&).</span>\n      </div>\n  </div>\n  <div class=\"mt-2\"> \n      <input type=\"password\" formControlName=\"password_confirmation\" cd class=\"form-control\" placeholder=\"Confirm Password\">\n      <div *ngIf=\"confirmpassword.invalid && (confirmpassword.touched||confirmpassword.dirty)\">\n          <span class=\"error\" *ngIf=\"confirmpassword.errors?.required\">Confirm Password is required</span>\n          <span class=\"error\" *ngIf=\"confirmpassword.valid\">The entered Password not match</span>\n      </div>\n  </div>\n  </div>\n  <div class=\"text-center\">\n  <div class=\"mt-3 col-lg-12 col-12\">\n      <button class=\"btn\" [disabled]=\"registerForm.invalid\">Submit</button>\n  </div>\n  </div>\n  </form>\n  </div>\n\n<table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Customers_id</th>\n            <th scope=\"col\">Firstname</th>\n            <th scope=\"col\">Lastname</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of users\" >\n            <td scope=\"row\">{{user.id}}</td>\n            <td>{{ user.firstname }}</td>\n            <td>{{ user.lastname }}</td>\n            <td>{{ user.email }}</td>\n            <td>\n                <button (click)=\"deleteUser(user.id)\">Delete</button>\n                <button (click)=\"editUser(user.id,user)\">Edit</button></td>\n          </tr>     \n        </tbody>\n      </table>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}