{"ast":null,"code":"import { hashSync } from 'bcryptjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../app/registration.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ngx-pagination\";\nfunction ShowcustomerComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ShowcustomerComponent_tr_14_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteUser(user_r1.id));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ShowcustomerComponent_tr_14_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.editUser(user_r1.id, user_r1));\n    });\n    i0.ɵɵtext(13, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.firstname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.lastname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.email);\n  }\n}\nconst _c0 = function (a1) {\n  return {\n    itemsPerPage: 20,\n    currentPage: a1\n  };\n};\nexport class ShowcustomerComponent {\n  constructor(api, router) {\n    this.api = api;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.api.apiCall().subscribe(data => {\n      this.users = data;\n    });\n  }\n  submitData() {\n    const hashedPassword = hashSync(this.registerForm.value.password, 10);\n    const formData = {\n      ...this.registerForm.value,\n      password: hashedPassword,\n      password_confirmation: hashedPassword\n    };\n    const id = this.user_data ? this.user_data.customer.id : null;\n    if (id) {\n      // If the ID exists, update the record\n      this.api.editUser(id, formData).subscribe(data => {});\n      alert(`User with ID ${id} has been updated`);\n      this.user_data.customer.firstname = this.registerForm.value.firstname;\n      this.user_data.customer.lastname = this.registerForm.value.lastname;\n      this.user_data.customer.email = this.registerForm.value.email;\n    } else {\n      // If the ID does not exist, create a new record\n      this.api.submitData(formData).subscribe(data => {});\n      alert(`New user has been created`);\n    }\n  }\n  editUser(id, data) {\n    this.api.editUser(id, data).subscribe(data => {\n      this.user_data = data;\n      /*     console.log(this.user_data.customer); */\n      /*  this.registerForm.patchValue({\r\n         firstname:this.user_data.customer.firstname,\r\n         lastname:this.user_data.customer.lastname,\r\n         email:this.user_data.customer.email,\r\n       }) */\n    });\n\n    this.router.navigate(['showcustomers/edit', id]);\n  }\n  deleteUser(id) {\n    if (confirm(\"Are you sure you want to delete this user?\")) {\n      this.api.deleteUser(id).subscribe(data => {});\n    }\n  }\n}\nShowcustomerComponent.ɵfac = function ShowcustomerComponent_Factory(t) {\n  return new (t || ShowcustomerComponent)(i0.ɵɵdirectiveInject(i1.RegistrationService), i0.ɵɵdirectiveInject(i2.Router));\n};\nShowcustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowcustomerComponent,\n  selectors: [[\"app-showcustomer\"]],\n  decls: 17,\n  vars: 6,\n  consts: [[1, \"table\", \"table-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bg.dark\", 3, \"pageChange\"], [\"scope\", \"row\"], [3, \"click\"]],\n  template: function ShowcustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\", 1);\n      i0.ɵɵtext(4, \"Customers_id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\", 1);\n      i0.ɵɵtext(6, \"Firstname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 1);\n      i0.ɵɵtext(8, \"Lastname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 1);\n      i0.ɵɵtext(10, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 1);\n      i0.ɵɵtext(12, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, ShowcustomerComponent_tr_14_Template, 14, 4, \"tr\", 2);\n      i0.ɵɵpipe(15, \"paginate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"pagination-controls\", 3);\n      i0.ɵɵlistener(\"pageChange\", function ShowcustomerComponent_Template_pagination_controls_pageChange_16_listener($event) {\n        return ctx.a = $event;\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(15, 1, ctx.users, i0.ɵɵpureFunction1(4, _c0, ctx.a)));\n    }\n  },\n  dependencies: [i3.NgForOf, i4.PaginationControlsComponent, i4.PaginatePipe],\n  styles: [\"*[_ngcontent-%COMP%]{    \\r\\n    font-family: 'Shantell Sans', cursive;\\r\\n   }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hvd2N1c3RvbWVyL3Nob3djdXN0b21lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUNBQXFDO0dBQ3RDIiwic291cmNlc0NvbnRlbnQiOlsiKnsgICAgXHJcbiAgICBmb250LWZhbWlseTogJ1NoYW50ZWxsIFNhbnMnLCBjdXJzaXZlO1xyXG4gICB9XHJcbiAgICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["hashSync","i0","ShowcustomerComponent","constructor","api","router","ngOnInit","apiCall","subscribe","data","users","submitData","hashedPassword","registerForm","value","password","formData","password_confirmation","id","user_data","customer","editUser","alert","firstname","lastname","email","navigate","deleteUser","confirm","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\New folder\\registration\\src\\app\\showcustomer\\showcustomer.component.ts","C:\\New folder\\registration\\src\\app\\showcustomer\\showcustomer.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport{RegistrationService}from'../../app/registration.service';\nimport { hashSync,compareSync } from 'bcryptjs';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-showcustomer',\n  templateUrl: './showcustomer.component.html',\n  styleUrls: ['./showcustomer.component.css']\n})\nexport class ShowcustomerComponent { \n  constructor(private api:RegistrationService\n  ,private router:Router){}\nregisterForm:any;\nusers:any;\ndata:any;\nuser_data:any;\na:any;\nngOnInit():void{\n  this.api.apiCall().subscribe((data)=>{\n    this.users = data;\n  })\n}\nsubmitData()\n{\n  const hashedPassword = hashSync(this.registerForm.value.password, 10);\n  const formData = {\n    ...this.registerForm.value,\n    password: hashedPassword,\n    password_confirmation: hashedPassword\n  } \n  const id = this.user_data ? this.user_data.customer.id : null;\n  if (id) {\n    // If the ID exists, update the record\n    this.api.editUser(id, formData).subscribe(data => {\n    });   \n    alert(`User with ID ${id} has been updated`);\n    this.user_data.customer.firstname = this.registerForm.value.firstname;\n    this.user_data.customer.lastname = this.registerForm.value.lastname;\n    this.user_data.customer.email = this.registerForm.value.email;\n  } else {\n    // If the ID does not exist, create a new record\n    this.api.submitData(formData).subscribe(data => {\n    });\n    alert(`New user has been created`);\n  }\n}\neditUser(id:number,data:any){\n  this.api.editUser(id,data).subscribe((data: any) => {\n    this.user_data = data;\n/*     console.log(this.user_data.customer); */\n   /*  this.registerForm.patchValue({\n      firstname:this.user_data.customer.firstname,\n      lastname:this.user_data.customer.lastname,\n      email:this.user_data.customer.email,\n    }) */\n  });\n  this.router.navigate(['showcustomers/edit',id])\n}\ndeleteUser(id: number) {\n  if (confirm(\"Are you sure you want to delete this user?\")) {\n    this.api.deleteUser(id).subscribe((data:any) => {\n    });\n  }\n}\n}\n","    <table class=\"table table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Customers_id</th>\n            <th scope=\"col\">Firstname</th>\n            <th scope=\"col\">Lastname</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of users|paginate:{itemsPerPage:20,currentPage:a}\">\n            <td scope=\"row\">{{user.id}}</td>\n            <td>{{ user.firstname }}</td>\n            <td>{{ user.lastname }}</td>\n            <td>{{ user.email }}</td>\n            <td>\n                <button (click)=\"deleteUser(user.id)\">Delete</button>\n                <button (click)=\"editUser(user.id,user)\">Edit</button></td>\n          </tr>     \n        </tbody>\n      </table>\n      <pagination-controls (pageChange)=\"a=$event\" class=\"bg.dark\">\n      </pagination-controls>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}