{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { hashSync } from 'bcryptjs';\nlet RegistrationComponent = class RegistrationComponent {\n  constructor(api) {\n    this.api = api;\n  }\n  ngOnInit() {\n    this.api.apiCall().subscribe(data => {\n      this.users = data;\n    });\n    this.registerForm = new FormGroup({\n      \"firstname\": new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z]*')]),\n      \"lastname\": new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z]*')]),\n      \"email\": new FormControl(null, [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]),\n      \"password\": new FormControl(null, [Validators.required, Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$')]),\n      \"password_confirmation\": new FormControl(null, [Validators.required])\n    });\n  }\n  submitData() {\n    const hashedPassword = hashSync(this.registerForm.value.password, 10);\n    const formData = {\n      ...this.registerForm.value,\n      password: hashedPassword,\n      password_confirmation: hashedPassword\n    };\n    if (this.confirmpassword.value != this.passWord.value) {\n      alert(\"password does not match\");\n      return;\n    }\n    this.api.submitData(formData).subscribe(data => {\n      console.log(data);\n    });\n    if (this.registerForm.valid) {\n      alert(`Thank You ${this.registerForm.value.firstname}`);\n    }\n  }\n  deleteUser(id) {\n    this.api.deleteUser(id).subscribe(data => {\n      console.log('User deleted successfully');\n    });\n  }\n  get firstName() {\n    return this.registerForm.get('firstname');\n  }\n  get lastName() {\n    return this.registerForm.get('lastname');\n  }\n  get emailid() {\n    return this.registerForm.get('email');\n  }\n  get passWord() {\n    return this.registerForm.get('password');\n  }\n  get confirmpassword() {\n    return this.registerForm.get('password_confirmation');\n  }\n};\nRegistrationComponent = __decorate([Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})], RegistrationComponent);\nexport { RegistrationComponent };","map":{"version":3,"mappings":"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","names":["Component","FormGroup","FormControl","Validators","hashSync","RegistrationComponent","constructor","api","ngOnInit","apiCall","subscribe","data","users","registerForm","required","pattern","submitData","hashedPassword","value","password","formData","password_confirmation","confirmpassword","passWord","alert","console","log","valid","firstname","deleteUser","id","firstName","get","lastName","emailid","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\New folder\\registration\\src\\app\\registration\\registration.component.ts"],"sourcesContent":["import { ReturnStatement } from '@angular/compiler';\nimport { Component,OnInit } from '@angular/core';\nimport{FormGroup,FormControl,Validators}from'@angular/forms';\nimport{RegistrationService}from'../../app/registration.service';\nimport { hashSync,compareSync } from 'bcryptjs';\n@Component({\n\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent {\n  constructor(private api:RegistrationService){}\n  registerForm:any;\n  users:any;\n\n  ngOnInit():void{\n    this.api.apiCall().subscribe((data)=>{\n      this.users = data;\n    })\n  this.registerForm=new FormGroup({\n    \"firstname\":new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z]*')]),\n    \"lastname\":new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z]*')]),\n    \"email\":new FormControl(null,[Validators.required,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]),\n    \"password\":new FormControl(null,[Validators.required,Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$')]),\n    \"password_confirmation\":new FormControl(null,[Validators.required]),\n  });\n  }\n\n  submitData()\n  {\n    const hashedPassword = hashSync(this.registerForm.value.password, 10);\n    const formData = {\n      ...this.registerForm.value,\n      password: hashedPassword,\n      password_confirmation: hashedPassword\n    }\n    if(this.confirmpassword.value!=this.passWord.value){\n      alert(\"password does not match\");\n      return;\n    }\n  this.api.submitData(formData).subscribe(data => {\n      console.log(data);\n    })\n    \n    if(this.registerForm.valid){\n      alert(`Thank You ${this.registerForm.value.firstname}`);\n    }\n  }\n  deleteUser(id: number) {\n    this.api.deleteUser(id).subscribe((data) => {\n      console.log('User deleted successfully');\n    });\n  }\n  \n  get firstName(){\n    return this.registerForm.get('firstname');\n  }\n  get lastName(){\n    return this.registerForm.get('lastname');\n  }\n  get emailid(){\n    return this.registerForm.get('email');\n  }\n  get passWord(){\n    return this.registerForm.get('password');\n  }\n  get confirmpassword(){\n    return this.registerForm.get('password_confirmation');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}