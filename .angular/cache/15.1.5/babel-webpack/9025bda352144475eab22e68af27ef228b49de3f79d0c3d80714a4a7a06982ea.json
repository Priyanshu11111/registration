{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { hashSync } from 'bcryptjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../app/registration.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegistrationComponent_div_7_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"First name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_7_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Enter Only Characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_7_span_1_Template, 2, 0, \"span\", 17);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_7_span_2_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.firstName.errors == null ? null : ctx_r0.firstName.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.firstName.errors == null ? null : ctx_r0.firstName.errors.pattern);\n  }\n}\nfunction RegistrationComponent_div_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Lastname is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_10_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Enter Only Characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_10_span_1_Template, 2, 0, \"span\", 17);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_10_span_2_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.lastName.errors == null ? null : ctx_r1.lastName.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.lastName.errors == null ? null : ctx_r1.lastName.errors.pattern);\n  }\n}\nfunction RegistrationComponent_div_13_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Emailid is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_13_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Enter Valid Email Address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_13_span_1_Template, 2, 0, \"span\", 17);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_13_span_2_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.emailid.errors == null ? null : ctx_r2.emailid.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.emailid.errors == null ? null : ctx_r2.emailid.errors.pattern);\n  }\n}\nfunction RegistrationComponent_div_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_16_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Password must contain more than 8 characters, 1 numeric, 1 upper case letter, and 1 special character($@$!%*?&).\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_16_span_1_Template, 2, 0, \"span\", 17);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_16_span_2_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.passWord.errors == null ? null : ctx_r3.passWord.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.passWord.errors == null ? null : ctx_r3.passWord.errors.pattern);\n  }\n}\nfunction RegistrationComponent_div_19_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_19_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \"The entered Password not match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegistrationComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegistrationComponent_div_19_span_1_Template, 2, 0, \"span\", 17);\n    i0.ɵɵtemplate(2, RegistrationComponent_div_19_span_2_Template, 2, 0, \"span\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.confirmpassword.errors == null ? null : ctx_r4.confirmpassword.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.confirmpassword.valid);\n  }\n}\nfunction RegistrationComponent_tr_38_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function RegistrationComponent_tr_38_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const user_r16 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.deleteUser(user_r16.id));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function RegistrationComponent_tr_38_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const user_r16 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.editUser(user_r16.id, user_r16));\n    });\n    i0.ɵɵtext(13, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function RegistrationComponent_tr_38_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.updateProfile());\n    });\n    i0.ɵɵtext(15, \"Update Profile\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r16 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r16.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r16.firstname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r16.lastname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r16.email);\n  }\n}\nexport class RegistrationComponent {\n  constructor(api) {\n    this.api = api;\n  }\n  ngOnInit() {\n    this.api.apiCall().subscribe(data => {\n      this.users = data;\n    });\n    this.registerForm = new FormGroup({\n      \"firstname\": new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z]*')]),\n      \"lastname\": new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z]*')]),\n      \"email\": new FormControl(null, [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]),\n      \"password\": new FormControl(null, [Validators.required, Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$')]),\n      \"password_confirmation\": new FormControl(null, [Validators.required])\n    });\n  }\n  updateProfile() {\n    this.registerForm.patchValue({\n      firstname: this.registerForm.firstName\n    });\n  }\n  submitData() {\n    const hashedPassword = hashSync(this.registerForm.value.password, 10);\n    const formData = {\n      ...this.registerForm.value,\n      password: hashedPassword,\n      password_confirmation: hashedPassword\n    };\n    if (this.confirmpassword.value != this.passWord.value) {\n      alert(\"password does not match\");\n      return;\n    }\n    this.api.submitData(formData).subscribe(data => {\n      console.log(data);\n    });\n    if (this.registerForm.valid) {\n      alert(`Thank You ${this.registerForm.value.firstname}`);\n    }\n  }\n  editUser(id, data) {\n    this.api.editUser(id, data).subscribe(data => {\n      this.registerForm = this.data;\n      console.log(data);\n    });\n  }\n  deleteUser(id) {\n    this.api.deleteUser(id).subscribe(data => {\n      console.log('User deleted successfully');\n    });\n  }\n  get firstName() {\n    return this.registerForm.get('firstname');\n  }\n  get lastName() {\n    return this.registerForm.get('lastname');\n  }\n  get emailid() {\n    return this.registerForm.get('email');\n  }\n  get passWord() {\n    return this.registerForm.get('password');\n  }\n  get confirmpassword() {\n    return this.registerForm.get('password_confirmation');\n  }\n}\nRegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.RegistrationService));\n};\nRegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationComponent,\n  selectors: [[\"app-registration\"]],\n  decls: 39,\n  vars: 8,\n  consts: [[1, \"continer\", \"mt-5\"], [1, \"content\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\"], [1, \"row\"], [1, \"mt-2\", \"mb-2\", \"col-lg-6\", \"col-6\"], [\"type\", \"text\", \"formControlName\", \"firstname\", \"placeholder\", \"First name\", 1, \"form-control\"], [4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"lastname\", \"placeholder\", \"Last name\", 1, \"form-control\"], [1, \"mt-2\", \"mb-2\", \"col-lg-12\", \"col-12\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Email-id\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", \"cd\", \"\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password_confirmation\", \"cd\", \"\", \"placeholder\", \"Confirm Password\", 1, \"form-control\"], [1, \"mt-3\", \"col-lg-12\", \"col-12\"], [1, \"btn\", 3, \"disabled\"], [1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"], [\"scope\", \"row\"], [3, \"click\"], [\"type\", \"button\", 3, \"click\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submitData();\n      });\n      i0.ɵɵelementStart(2, \"h3\", 2);\n      i0.ɵɵtext(3, \"Registration Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4);\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵtemplate(7, RegistrationComponent_div_7_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4);\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵtemplate(10, RegistrationComponent_div_10_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 8);\n      i0.ɵɵelement(12, \"input\", 9);\n      i0.ɵɵtemplate(13, RegistrationComponent_div_13_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8);\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵtemplate(16, RegistrationComponent_div_16_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 8);\n      i0.ɵɵelement(18, \"input\", 11);\n      i0.ɵɵtemplate(19, RegistrationComponent_div_19_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 2)(21, \"div\", 12)(22, \"button\", 13);\n      i0.ɵɵtext(23, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(24, \"table\", 14)(25, \"thead\")(26, \"tr\")(27, \"th\", 15);\n      i0.ɵɵtext(28, \"Customers_id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"th\", 15);\n      i0.ɵɵtext(30, \"Firstname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"th\", 15);\n      i0.ɵɵtext(32, \"Lastname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"th\", 15);\n      i0.ɵɵtext(34, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"th\", 15);\n      i0.ɵɵtext(36, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(37, \"tbody\");\n      i0.ɵɵtemplate(38, RegistrationComponent_tr_38_Template, 16, 4, \"tr\", 16);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.firstName.invalid && (ctx.firstName.touched || ctx.firstName.dirty));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.lastName.invalid && (ctx.lastName.touched || ctx.lastName.dirty));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.emailid.invalid && (ctx.emailid.touched || ctx.emailid.dirty));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.passWord.invalid && (ctx.passWord.touched || ctx.passWord.dirty));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.confirmpassword.invalid && (ctx.confirmpassword.touched || ctx.confirmpassword.dirty));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.users);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".content[_ngcontent-%COMP%]{\\r\\n    max-width: 500px;\\r\\n    margin: auto;\\r\\n    padding: 2% 2%; \\r\\n}\\r\\ninput.ng-invalid[_ngcontent-%COMP%]{\\r\\n    border-left: 5px solid red;\\r\\n}\\r\\ninput.ng-valid[_ngcontent-%COMP%]{\\r\\n    border-left: 5px solid green;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]\\r\\n{\\r\\nbackground-color: white;\\r\\ncolor: black;\\r\\ntext-align: center;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]:hover\\r\\n{\\r\\n    background-color: aqua;\\r\\n    color: black;\\r\\n}\\r\\n.error[_ngcontent-%COMP%]\\r\\n{\\r\\n    color: red;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0cmF0aW9uL3JlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixjQUFjO0FBQ2xCO0FBQ0E7SUFDSSwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLDRCQUE0QjtBQUNoQztBQUNBOztBQUVBLHVCQUF1QjtBQUN2QixZQUFZO0FBQ1osa0JBQWtCO0FBQ2xCO0FBQ0E7O0lBRUksc0JBQXNCO0lBQ3RCLFlBQVk7QUFDaEI7QUFDQTs7SUFFSSxVQUFVO0FBQ2QiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudHtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBwYWRkaW5nOiAyJSAyJTsgXHJcbn1cclxuaW5wdXQubmctaW52YWxpZHtcclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgcmVkO1xyXG59XHJcbmlucHV0Lm5nLXZhbGlke1xyXG4gICAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCBncmVlbjtcclxufVxyXG5idXR0b25cclxue1xyXG5iYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuY29sb3I6IGJsYWNrO1xyXG50ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuYnV0dG9uOmhvdmVyXHJcbntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGFxdWE7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuLmVycm9yXHJcbntcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","hashSync","i0","RegistrationComponent","constructor","api","ngOnInit","apiCall","subscribe","data","users","registerForm","required","pattern","updateProfile","patchValue","firstname","firstName","submitData","hashedPassword","value","password","formData","password_confirmation","confirmpassword","passWord","alert","console","log","valid","editUser","id","deleteUser","get","lastName","emailid","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\New folder\\registration\\src\\app\\registration\\registration.component.ts","C:\\New folder\\registration\\src\\app\\registration\\registration.component.html"],"sourcesContent":["  import { ReturnStatement } from '@angular/compiler';\n  import { Component,OnInit } from '@angular/core';\n  import{FormGroup,FormControl,Validators}from'@angular/forms';\n  import{RegistrationService}from'../../app/registration.service';\n  import { hashSync,compareSync } from 'bcryptjs';\n  @Component({\n\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.css']\n  })\n  export class RegistrationComponent {\n    constructor(private api:RegistrationService){}\n    registerForm:any;\n    users:any;\n    data:any;\n\n    ngOnInit():void{\n      this.api.apiCall().subscribe((data)=>{\n        this.users = data;\n      })\n    this.registerForm=new FormGroup({\n      \"firstname\":new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z]*')]),\n      \"lastname\":new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z]*')]),\n      \"email\":new FormControl(null,[Validators.required,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]),\n      \"password\":new FormControl(null,[Validators.required,Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$')]),\n      \"password_confirmation\":new FormControl(null,[Validators.required]),\n    });\n\n    }\n    updateProfile() {\n      this.registerForm.patchValue({\n        firstname: this.registerForm.firstName,\n      });\n    }\n    submitData()\n    {\n      const hashedPassword = hashSync(this.registerForm.value.password, 10);\n      const formData = {\n        ...this.registerForm.value,\n        password: hashedPassword,\n        password_confirmation: hashedPassword\n      } \n      if(this.confirmpassword.value!=this.passWord.value){\n        alert(\"password does not match\");\n        return;\n      }\n    this.api.submitData(formData).subscribe(data => {\n        console.log(data);\n      })    \n      if(this.registerForm.valid){\n        alert(`Thank You ${this.registerForm.value.firstname}`);\n      }\n    }\n    editUser(id:number,data:any){\n      this.api.editUser(id,data).subscribe((data)=>{\n        this.registerForm=this.data;\n        console.log(data);\n      });\n    }\n    deleteUser(id: number) {\n      this.api.deleteUser(id).subscribe((data) => {\n        console.log('User deleted successfully');\n      });\n    }\n    get firstName(){\n      return this.registerForm.get('firstname');\n    }\n    get lastName(){\n      return this.registerForm.get('lastname');\n    }\n    get emailid(){\n      return this.registerForm.get('email');\n    }\n    get passWord(){\n      return this.registerForm.get('password');\n    }\n    get confirmpassword(){\n      return this.registerForm.get('password_confirmation');\n    }\n  }\n","<div class=\"continer mt-5\">\n    <form [formGroup]=\"registerForm\" class=\"content\" (ngSubmit)=\"submitData()\">\n        <h3 class=\"text-center\">Registration Form</h3>\n        <div class=\"row\">\n    <div class=\"mt-2 mb-2 col-lg-6 col-6\">\n        <input type=\"text\" formControlName=\"firstname\"class=\"form-control\" placeholder=\"First name\">\n    <div *ngIf=\"firstName.invalid && (firstName.touched||firstName.dirty)\">\n        <span class=\"error\" *ngIf=\"firstName.errors?.required\">First name is required</span>\n        <span class=\"error\" *ngIf=\"firstName.errors?.pattern\">Enter Only Characters</span>\n    </div>\n    </div>\n    <div class=\"mt-2 mb-2 col-lg-6 col-6\">\n        <input type=\"text\" formControlName=\"lastname\"class=\"form-control\" placeholder=\"Last name\">\n        <div *ngIf=\"lastName.invalid && (lastName.touched||lastName.dirty)\">\n        <span class=\"error\" *ngIf=\"lastName.errors?.required\">Lastname is required</span>\n        <span class=\"error\" *ngIf=\"lastName.errors?.pattern\">Enter Only Characters</span>\n    </div>\n    </div>\n    <div class=\"mt-2 mb-2 col-lg-12 col-12\">\n        <input type=\"text\" formControlName=\"email\" class=\"form-control\" placeholder=\"Email-id\">\n        <div *ngIf=\"emailid.invalid && (emailid.touched||emailid.dirty)\">\n            <span class=\"error\" *ngIf=\"emailid.errors?.required\">Emailid is required</span>\n            <span class=\"error\" *ngIf=\"emailid.errors?.pattern\">Enter Valid Email Address</span>\n        </div>\n    </div>\n    <div class=\"mt-2 mb-2 col-lg-12 col-12\">\n        <input type=\"password\" formControlName=\"password\" cd class=\"form-control\" placeholder=\"Password\">\n        <div *ngIf=\"passWord.invalid && (passWord.touched||passWord.dirty)\">\n            <span class=\"error\" *ngIf=\"passWord.errors?.required\">Password is required</span>\n            <span class=\"error\" *ngIf=\"passWord.errors?.pattern\">Password must contain more than 8 characters, 1 numeric, 1 upper case letter, and 1 special character($@$!%*?&).</span>\n        </div>\n    </div>\n    <div class=\"mt-2 mb-2 col-lg-12 col-12\"> \n        <input type=\"password\" formControlName=\"password_confirmation\" cd class=\"form-control\" placeholder=\"Confirm Password\">\n        <div *ngIf=\"confirmpassword.invalid && (confirmpassword.touched||confirmpassword.dirty)\">\n            <span class=\"error\" *ngIf=\"confirmpassword.errors?.required\">Confirm Password is required</span>\n            <span class=\"error\" *ngIf=\"confirmpassword.valid\">The entered Password not match</span>\n        </div>\n    </div>\n    </div>\n    <div class=\"text-center\">\n    <div class=\"mt-3 col-lg-12 col-12\">\n        <button class=\"btn\" [disabled]=\"registerForm.invalid\">Submit</button>\n    </div>\n    </div>\n    </form>\n    </div>\n    <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Customers_id</th>\n            <th scope=\"col\">Firstname</th>\n            <th scope=\"col\">Lastname</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of users\" >\n            <td scope=\"row\">{{user.id}}</td>\n            <td>{{ user.firstname }}</td>\n            <td>{{ user.lastname }}</td>\n            <td>{{ user.email }}</td>\n            <td>\n                <button (click)=\"deleteUser(user.id)\">Delete</button>\n            <button (click)=\"editUser(user.id,user)\">Edit</button></td>\n            <button type=\"button\" (click)=\"updateProfile()\">Update Profile</button>\n\n          </tr>     \n        </tbody>\n      </table>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}