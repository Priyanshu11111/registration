{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { hashSync } from 'bcryptjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../app/registration.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ngx-pagination\";\nfunction ShowcustomerComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtext(1, \"> \");\n    i0.ɵɵelementStart(2, \"td\", 3);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\")(11, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ShowcustomerComponent_tr_14_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteUser(user_r1.id));\n    });\n    i0.ɵɵtext(12, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ShowcustomerComponent_tr_14_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.editUser(user_r1.id, user_r1));\n    });\n    i0.ɵɵtext(14, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(user_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.firstname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.lastname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.email);\n  }\n}\nconst _c0 = function (a2, a3) {\n  return {\n    id: \"Customers_id\",\n    itemsPerPage: 10,\n    currentPage: a2,\n    totalItems: a3\n  };\n};\nexport class ShowcustomerComponent {\n  constructor(api, router) {\n    this.api = api;\n    this.router = router;\n    this.page = 1;\n  }\n  ngOnInit() {\n    this.api.apiCall().subscribe(data => {\n      this.users = data;\n      this.totalUsers = this.users.length;\n    });\n    this.registerForm = new FormGroup({\n      \"firstname\": new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z]*')]),\n      \"lastname\": new FormControl(null, [Validators.required, Validators.pattern('[a-zA-Z]*')]),\n      \"email\": new FormControl(null, [Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]),\n      \"password\": new FormControl(null, [Validators.required, Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$')]),\n      \"password_confirmation\": new FormControl(null, [Validators.required])\n    });\n  }\n  submitData() {\n    const hashedPassword = hashSync(this.registerForm.value.password, 10);\n    const formData = {\n      ...this.registerForm.value,\n      password: hashedPassword,\n      password_confirmation: hashedPassword\n    };\n    const id = this.user_data ? this.user_data.customer.id : null;\n    if (id) {\n      // If the ID exists, update the record\n      this.api.editUser(id, formData).subscribe(data => {\n        console.log(data);\n      });\n      alert(`User with ID ${id} has been updated`);\n      this.user_data.customer.firstname = this.registerForm.value.firstname;\n      this.user_data.customer.lastname = this.registerForm.value.lastname;\n      this.user_data.customer.email = this.registerForm.value.email;\n    } else {\n      // If the ID does not exist, create a new record\n      this.api.submitData(formData).subscribe(data => {\n        console.log(data);\n      });\n      alert(`New user has been created`);\n    }\n    if (this.confirmpassword.value != this.passWord.value) {\n      alert(\"password does not match\");\n      return;\n    }\n    if (this.registerForm.valid) {\n      alert(`Thank You ${this.registerForm.value.firstname}`);\n    }\n  }\n  editUser(id, data) {\n    console.log(id);\n    this.api.editUser(id, data).subscribe(data => {\n      this.user_data = data;\n      console.log(this.user_data.customer);\n      this.registerForm.patchValue({\n        firstname: this.user_data.customer.firstname,\n        lastname: this.user_data.customer.lastname,\n        email: this.user_data.customer.email\n      });\n    });\n    this.router.navigate(['showcustomers/edit', id]);\n  }\n  deleteUser(id) {\n    this.api.deleteUser(id).subscribe(data => {\n      console.log('User deleted successfully');\n    });\n  }\n  get firstName() {\n    return this.registerForm.get('firstname');\n  }\n  get lastName() {\n    return this.registerForm.get('lastname');\n  }\n  get emailid() {\n    return this.registerForm.get('email');\n  }\n  get passWord() {\n    return this.registerForm.get('password');\n  }\n  get confirmpassword() {\n    return this.registerForm.get('password_confirmation');\n  }\n}\nShowcustomerComponent.ɵfac = function ShowcustomerComponent_Factory(t) {\n  return new (t || ShowcustomerComponent)(i0.ɵɵdirectiveInject(i1.RegistrationService), i0.ɵɵdirectiveInject(i2.Router));\n};\nShowcustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShowcustomerComponent,\n  selectors: [[\"app-showcustomer\"]],\n  decls: 16,\n  vars: 7,\n  consts: [[1, \"table\", \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [3, \"click\"]],\n  template: function ShowcustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"tr\")(3, \"th\", 1);\n      i0.ɵɵtext(4, \"Customers_id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"th\", 1);\n      i0.ɵɵtext(6, \"Firstname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 1);\n      i0.ɵɵtext(8, \"Lastname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 1);\n      i0.ɵɵtext(10, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 1);\n      i0.ɵɵtext(12, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, ShowcustomerComponent_tr_14_Template, 15, 4, \"tr\", 2);\n      i0.ɵɵpipe(15, \"paginate\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(15, 1, ctx.users, i0.ɵɵpureFunction2(4, _c0, ctx.page, ctx.totalUsers)));\n    }\n  },\n  dependencies: [i3.NgForOf, i4.PaginatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","hashSync","i0","ShowcustomerComponent","constructor","api","router","ngOnInit","apiCall","subscribe","data","users","totalUsers","length","registerForm","required","pattern","submitData","hashedPassword","value","password","formData","password_confirmation","id","user_data","customer","editUser","console","log","alert","firstname","lastname","email","confirmpassword","passWord","valid","patchValue","navigate","deleteUser","firstName","get","lastName","emailid","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\New folder\\registration\\src\\app\\showcustomer\\showcustomer.component.ts","C:\\New folder\\registration\\src\\app\\showcustomer\\showcustomer.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport{RegistrationService}from'../../app/registration.service';\nimport { ReturnStatement } from '@angular/compiler';\nimport{FormGroup,FormControl,Validators}from'@angular/forms';\nimport { hashSync,compareSync } from 'bcryptjs';\nimport { last } from 'rxjs';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-showcustomer',\n  templateUrl: './showcustomer.component.html',\n  styleUrls: ['./showcustomer.component.css']\n})\nexport class ShowcustomerComponent { \n  constructor(private api:RegistrationService\n  ,private router:Router){}\nregisterForm:any;\nusers:any;\ndata:any;\nuser_data:any;\ntotalUsers:any;\npage:number=1;\nngOnInit():void{\n  this.api.apiCall().subscribe((data)=>{\n    this.users = data;\n     this.totalUsers = this.users.length;\n  })\nthis.registerForm=new FormGroup({\n  \"firstname\":new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z]*')]),\n  \"lastname\":new FormControl(null,[Validators.required,Validators.pattern('[a-zA-Z]*')]),\n  \"email\":new FormControl(null,[Validators.required,Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]),\n  \"password\":new FormControl(null,[Validators.required,Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}$')]),\n  \"password_confirmation\":new FormControl(null,[Validators.required]),\n});\n}\nsubmitData()\n{\n  const hashedPassword = hashSync(this.registerForm.value.password, 10);\n  const formData = {\n    ...this.registerForm.value,\n    password: hashedPassword,\n    password_confirmation: hashedPassword\n  } \n  const id = this.user_data ? this.user_data.customer.id : null;\n  if (id) {\n    // If the ID exists, update the record\n    this.api.editUser(id, formData).subscribe(data => {\n      console.log(data);\n    });\n    alert(`User with ID ${id} has been updated`);\n    this.user_data.customer.firstname = this.registerForm.value.firstname;\n    this.user_data.customer.lastname = this.registerForm.value.lastname;\n    this.user_data.customer.email = this.registerForm.value.email;\n  } else {\n    // If the ID does not exist, create a new record\n    this.api.submitData(formData).subscribe(data => {\n      console.log(data);\n    });\n    alert(`New user has been created`);\n  }\n  if(this.confirmpassword.value!=this.passWord.value){\n    alert(\"password does not match\");\n    return;\n  }\n  if(this.registerForm.valid){\n    alert(`Thank You ${this.registerForm.value.firstname}`);\n  }\n}\neditUser(id:number,data:any){\n  console.log(id);\n  this.api.editUser(id,data).subscribe((data: any) => {\n    this.user_data = data;\n    console.log(this.user_data.customer);\n    this.registerForm.patchValue({\n      firstname:this.user_data.customer.firstname,\n      lastname:this.user_data.customer.lastname,\n      email:this.user_data.customer.email,\n    })\n  });\n  this.router.navigate(['showcustomers/edit',id])\n}\ndeleteUser(id: number) {\n  this.api.deleteUser(id).subscribe((data) => {\n    console.log('User deleted successfully');\n  });\n}\nget firstName(){  \n  return this.registerForm.get('firstname');\n}\nget lastName(){\n  return this.registerForm.get('lastname');\n}\nget emailid(){\n  return this.registerForm.get('email');\n}\nget passWord(){\n  return this.registerForm.get('password');\n}\nget confirmpassword(){\n  return this.registerForm.get('password_confirmation');\n}\n}\n","    <table class=\"table table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Customers_id</th>\n            <th scope=\"col\">Firstname</th>\n            <th scope=\"col\">Lastname</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of users| paginate: { id: 'Customers_id',\n          itemsPerPage: 10,\n          currentPage: page,\n          totalItems: totalUsers}\">>\n            <td scope=\"row\">{{user.id}}</td>\n            <td>{{ user.firstname }}</td>\n            <td>{{ user.lastname }}</td>\n            <td>{{ user.email }}</td>\n            <td>\n                <button (click)=\"deleteUser(user.id)\">Delete</button>\n                <button (click)=\"editUser(user.id,user)\">Edit</button></td>\n          </tr>     \n        </tbody>\n      </table>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}