{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../registration.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(api, router) {\n    this.api = api;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const userRole = localStorage.getItem('userRole');\n    if (userRole === '1') {\n      this.router.navigate(['admin']);\n    } else {\n      this.router.navigate(['user']); // or any other route for unauthorized users\n      return false;\n    }\n    if (!this.api.IsloggedIn()) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return this.api.IsloggedIn();\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.RegistrationService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,GAAuB,EAASC,MAAa;IAA7C,QAAG,GAAHD,GAAG;IAA6B,WAAM,GAANC,MAAM;EAAS;EACnEC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IACxB,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,IAAIF,QAAQ,KAAK,GAAG,EAAE;MACpB,IAAI,CAACJ,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;KAChC,MAAK;MACN,IAAI,CAACP,MAAM,CAACO,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;MAChC,OAAO,KAAK;;IAEN,IAAG,CAAC,IAAI,CAACR,GAAG,CAACS,UAAU,EAAE,EAAC;MACxB,IAAI,CAACR,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;IAEd,OAAO,IAAI,CAACR,GAAG,CAACS,UAAU,EAAE;EAChC;;AAjBWX,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAY,SAATZ,SAAS;EAAAa,YAFR;AAAM","names":["AuthGuard","constructor","api","router","canActivate","route","state","userRole","localStorage","getItem","navigate","IsloggedIn","factory","providedIn"],"sourceRoot":"","sources":["C:\\New folder\\registration\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { RegistrationService } from '../registration.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private api:RegistrationService,private router:Router){}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean{\n      const userRole = localStorage.getItem('userRole');\nif (userRole === '1') {\n  this.router.navigate(['admin']);\n} else{\nthis.router.navigate(['user']); // or any other route for unauthorized users\nreturn false;\n}\n      if(!this.api.IsloggedIn()){\n        this.router.navigate(['login']);\n        return false;\n      }\n      return this.api.IsloggedIn();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}